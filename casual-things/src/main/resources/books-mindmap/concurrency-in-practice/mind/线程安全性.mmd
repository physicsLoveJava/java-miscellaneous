Mind Map generated by NB MindMap plugin   
> __version__=`1.1`,showJumps=`true`
---

# 线程安全性

## 核心

### 共享与可变变量的状态操作的管理

## 定义

### 类的行为符合不变形条件以及操作的后置条件

### 在多线程的环境下，与其单线程的定义保持一致

## 线程安全的类
> leftSide=`true`


### 良好的面向对象技术

### 不可修改性
> leftSide=`true`


### 不变形规范
> leftSide=`true`


## 原子性

### 竞争条件

#### 共享代码，因为线程执行的顺序变化而变化

#### check and set

### 复合操作

#### 加锁保持原子性

### 要保持状态的一致性，就需要在同一个原子性操作中更新所有相关的状态变量

## 内置锁
> leftSide=`true`


### 可重入

### 状态变量应该有某个锁进行保护

### 同步方法并不能解决状态上的原子性问题
> leftSide=`true`


#### if\(\!vector\.contains\(x\)\) \{vector\.add\(x\);\}

## 活跃性与性能
> leftSide=`true`

