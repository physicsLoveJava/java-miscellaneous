Mind Map generated by NB MindMap plugin   
> __version__=`1.1`,showJumps=`true`
---

# Object

## 继承层次

### All Objects including Arrays

## Hashcode
> leftSide=`true`


### Support for hash tables

### 同一个应用同一个对象hashcode必须一致

### 如果两个对象equals，则hashcode必须一致
> leftSide=`true`


### 如果两个对象不equals，则hashcode不需要一定是不同的
> leftSide=`true`

- NOTE
<pre>&#19981;&#36807;&#19981;&#21516;&#30340;hashcode&#20250;&#25552;&#20379;&#23545;&#35937;&#22312;hashtables&#20013;&#30340;&#24615;&#33021;</pre>

### 在jdk中，object的hashcode是将对象的地址转成了Integer

## Equals
> leftSide=`true`


### 自反性

### 对称性
> leftSide=`true`


### 一致性
> leftSide=`true`


### 传递性
> leftSide=`true`


### 非空不相等
> leftSide=`true`


## Clone

### 要求

#### x\.clone\(\) \!= x

#### x\.clone\(\)\.getClass\(\) == x\.getClass\(\)

#### x\.clone\(\)\.equals\(x\)

#### implement Cloneable

### 在需要深度拷贝的情况下，将super\.clone返回对象中的可变对象引用进行递归复制即可

### Arrays默认实现了Cloneable接口

## toString
> leftSide=`true`


### getClass\(\)\.getName\(\) \+ '@' \+ Integer\.toHexString\(hashCode\(\)\)

## 同步

### Notify

#### 唤醒等待在此对象上的线程，选择是随意的，随着实现不同

### NotifyAll

### wait

#### 让当前线程等待在该对象上，直到被唤醒，中断或者超时

#### 当前线程必须拥有该对象的监视器（锁）

#### 线程可能会出现虚假唤醒的状态，应用程序需要进行检测
- NOTE
<pre>synchronized(obj) {
    while(condition not hold) {
        obj.wait(timeout);
        ...
    }
}</pre>

## Finalize
> leftSide=`true`


### 当垃圾回收器认为该对象可以回收时会调用该方法的finalize方法，并且不会超过一次
